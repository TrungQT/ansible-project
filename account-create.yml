# - name: Create local admin user on Windows
#   hosts: vision_servers
#   gather_facts: true
#   vars:
#     windows_domain: "{{ ansible_hostname }}"
#     profile_marker: C:\Users\Administrator\profile_loaded.txt
#   tasks:

#     - name: Create a local user
#       ansible.windows.win_user:
#         name: svc-vision-account
#         password: "Str0ngP@ssw0rd2025!"
#         password_never_expires: true
#         user_cannot_change_password: true
#         account_disabled: false

#     - name: Add user to Administrators group (correct format)
#       ansible.windows.win_group_membership:
#         name: Administrators
#         members:
#           - '{{ windows_domain }}\svc-vision-account'
#         state: present

#     - name: Ensure C:\Temp directory exists
#       ansible.windows.win_file:
#         path: C:\Temp
#         state: directory

#     - name: Check if Administrator profile already exists
#       ansible.windows.win_stat:
#         path: "{{ profile_marker }}"
#       register: profile_status

#     - name: Create profile-loading script
#       ansible.windows.win_copy:
#         content: 'echo Profile has been loaded > "{{ profile_marker }}"'
#         dest: C:\Temp\load_admin_profile.bat
#       when: not profile_status.stat.exists

#     - name: Run script once as Administrator to load profile
#       ansible.windows.win_command: schtasks /create /tn LoadAdminProfile /tr "C:\\Temp\\load_admin_profile.bat" /sc once /st 00:00 /ru Administrator /rp "{{ ansible_password }}"
#       when: not profile_status.stat.exists

#     - name: Run the scheduled task
#       ansible.windows.win_command: schtasks /run /tn LoadAdminProfile
#       when: not profile_status.stat.exists

#     - name: Wait for profile to initialize
#       pause:
#         seconds: 5
#       when: not profile_status.stat.exists

#     - name: Delete the scheduled task
#       ansible.windows.win_command: schtasks /delete /tn LoadAdminProfile /f
#       when: not profile_status.stat.exists

# - name: Load Administrator profile using PsExec
#   hosts: vision_servers
#   gather_facts: true
#   vars:
#     windows_domain: "{{ ansible_hostname }}"
#     profile_marker: C:\Users\Administrator\profile_loaded.txt
#     psexec_url: "https://download.sysinternals.com/files/PSTools.zip"
#     psexec_zip: "C:\\Temp\\PSTools.zip"
#     psexec_path: "C:\\Temp\\psexec.exe"
#   tasks:

#     - name: Ensure C:\Temp directory exists
#       ansible.windows.win_file:
#         path: C:\Temp
#         state: directory

#     - name: Download PsExec
#       ansible.windows.win_get_url:
#         url: "{{ psexec_url }}"
#         dest: "{{ psexec_zip }}"
#         force: yes

#     - name: Extract PsExec from ZIP using PowerShell
#       ansible.windows.win_command: |
#         powershell -Command "Expand-Archive -Path '{{ psexec_zip }}' -DestinationPath 'C:\\Temp' -Force"

#     - name: Run PsExec to load Administrator profile
#       ansible.windows.win_command: |
#         {{ psexec_path }} -accepteula -u Administrator -p "{{ ansible_password }}" cmd /c "echo Profile has been loaded > {{ profile_marker }}"
#       register: psexec_result

#     - name: Debug PsExec output
#       debug:
#         var: psexec_result.stdout

#     - name: Clean up PsExec ZIP file
#       ansible.windows.win_file:
#         path: "{{ psexec_zip }}"
#         state: absent

#     - name: Clean up PsExec executable
#       ansible.windows.win_file:
#         path: "{{ psexec_path }}"
#         state: absent

    # - name: Create profile-loading script
    #   ansible.windows.win_copy:
    #     dest: C:\Temp\load_profile.bat
    #     content: |
    #       @echo off
    #       echo Loading profile...
    #       whoami > C:\Temp\profile_user.txt
    #       echo Profile loaded > C:\Temp\profile_loaded.txt
    #       exit 0

    # - name: Create scheduled task to load profile
    #   community.windows.win_scheduled_task:
    #     name: LoadProfile
    #     description: Load user profile for DPAPI
    #     actions:
    #       - path: cmd.exe
    #         arguments: /c C:\Temp\load_profile.bat
    #     username: Administrator
    #     password: "{{ ansible_password }}"
    #     run_level: highest
    #     logon_type: interactive_token_or_password
    #     state: present
    #     enabled: true

    # - name: Run scheduled task
    #   community.windows.win_scheduled_task:
    #     name: LoadProfile
    #     state: present

    # - name: Wait for profile to be loaded
    #   ansible.windows.win_stat:
    #     path: C:\Temp\profile_loaded.txt
    #   register: profile_status
    #   until: profile_status.stat.exists
    #   retries: 5
    #   delay: 10

- name: Load Administrator profile using Scheduled Tasks
  hosts: vision_servers
  gather_facts: true
  vars:
    windows_domain: "{{ ansible_hostname }}"
    profile_marker: C:\Temp\profile_loaded.txt
  tasks:

    - name: Ensure C:\Temp directory exists
      ansible.windows.win_file:
        path: C:\Temp
        state: directory

    - name: Create profile-loading script
      ansible.windows.win_copy:
        dest: C:\Temp\load_profile.bat
        content: |
          @echo off
          echo Loading profile...
          whoami > C:\Temp\profile_user.txt
          echo Profile loaded > C:\Temp\profile_loaded.txt
          exit 0

    - name: Create scheduled task to load profile
      community.windows.win_scheduled_task:
        name: LoadProfile
        description: Load user profile for DPAPI
        actions:
          - path: cmd.exe
            arguments: /c C:\Temp\load_profile.bat
        username: Administrator
        password: "{{ ansible_password }}"
        run_level: highest
        logon_type: interactive_token_or_password
        state: present
        enabled: true

    - name: Run scheduled task
      community.windows.win_scheduled_task:
        name: LoadProfile
        state: present

    - name: Wait for profile to be loaded
      ansible.windows.win_stat:
        path: C:\Temp\profile_loaded.txt
      register: profile_status
      until: profile_status.stat.exists
      retries: 10
      delay: 15

    - name: Verify Administrator profile directory exists
      ansible.windows.win_stat:
        path: C:\Users\Administrator
      register: admin_profile_status

    - name: Debug Administrator profile status
      debug:
        var: admin_profile_status

    - name: Delete the scheduled task
      community.windows.win_scheduled_task:
        name: LoadProfile
        state: absent

    - name: Remove temporary files
      ansible.windows.win_file:
        path: C:\Temp\load_profile.bat
        state: absent